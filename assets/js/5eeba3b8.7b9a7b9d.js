"use strict";(self.webpackChunkpromptext_docs=self.webpackChunkpromptext_docs||[]).push([[810],{805:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"file-filtering","title":"File Filtering","description":"Default Filters","source":"@site/docs/file-filtering.md","sourceDirName":".","slug":"/file-filtering","permalink":"/promptext/file-filtering","draft":false,"unlisted":false,"editUrl":"https://github.com/1broseidon/promptext/tree/main/docs/docs/file-filtering.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/promptext/configuration"},"next":{"title":"Token Analysis","permalink":"/promptext/token-analysis"}}');var s=i(4848),r=i(8453);const t={sidebar_position:4},c="File Filtering",d={},o=[{value:"Default Filters",id:"default-filters",level:2},{value:"Configuring Default Rules",id:"configuring-default-rules",level:3},{value:"Ignored Directories and Files",id:"ignored-directories-and-files",level:3},{value:"Binary File Detection",id:"binary-file-detection",level:3},{value:"Custom Filtering",id:"custom-filtering",level:2},{value:"Pattern Matching Options",id:"pattern-matching-options",level:3},{value:"Via Configuration File",id:"via-configuration-file",level:3},{value:"Via Command Line",id:"via-command-line",level:3},{value:"GitIgnore Integration",id:"gitignore-integration",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"file-filtering",children:"File Filtering"})}),"\n",(0,s.jsx)(n.h2,{id:"default-filters",children:"Default Filters"}),"\n",(0,s.jsxs)(n.p,{children:["promptext comes with intelligent default filters to exclude common non-source files and automatically detects binary files. These default filters can be controlled using the ",(0,s.jsx)(n.code,{children:"UseDefaultRules"})," option in configuration."]}),"\n",(0,s.jsx)(n.h3,{id:"configuring-default-rules",children:"Configuring Default Rules"}),"\n",(0,s.jsx)(n.p,{children:"By default, promptext applies a set of standard filtering rules that exclude common non-source files and directories. You can control this behavior in two ways:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Via configuration file:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .promptext.yml\nuse-default-rules: true  # Enable default filtering rules (default)\nuse-default-rules: false # Process all files except explicitly excluded ones\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Via command line:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"promptext -u=false  # Disable default rules, only use explicit excludes\npromptext --use-default-rules=false  # Same as above, long form\n"})}),"\n",(0,s.jsx)(n.p,{children:"When default rules are disabled:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Common directories (node_modules, vendor, etc.) will not be automatically excluded"}),"\n",(0,s.jsx)(n.li,{children:"Binary file detection remains active for safety"}),"\n",(0,s.jsx)(n.li,{children:"Your explicit excludes (via -x flag or config file) still apply"}),"\n",(0,s.jsx)(n.li,{children:"GitIgnore patterns (if enabled) still apply"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This is useful when you need to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Process files in typically excluded directories"}),"\n",(0,s.jsx)(n.li,{children:"Analyze dependencies or vendor code"}),"\n",(0,s.jsx)(n.li,{children:"Create a custom set of exclusion rules from scratch"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ignored-directories-and-files",children:"Ignored Directories and Files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["System files: ",(0,s.jsx)(n.code,{children:".DS_Store"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Version Control:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".git/"}),", ",(0,s.jsx)(n.code,{children:".git*"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".svn/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".hg/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Dependencies and Packages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"node_modules/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"vendor/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"bower_components/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"jspm_packages/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"IDE and Editor:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".idea/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".vscode/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".vs/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"*.sublime-*"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build and Output:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"dist/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"build/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"out/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"bin/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"target/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Cache Directories:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"__pycache__/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".pytest_cache/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".sass-cache/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".npm/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".yarn/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Test Coverage:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"coverage/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".nyc_output/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Infrastructure:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".terraform/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:".vagrant/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Logs and Temp:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"logs/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"*.log"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"tmp/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"temp/"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"binary-file-detection",children:"Binary File Detection"}),"\n",(0,s.jsx)(n.p,{children:"promptext automatically detects and excludes binary files using a sophisticated detection mechanism:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Null Byte Detection"}),": Files are scanned for null bytes (0x00) in their first 512 bytes, which typically indicates binary content."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"UTF-8 Validation"}),": Files are validated for proper UTF-8 encoding. If a file cannot be read as valid UTF-8 text, it's considered binary."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This approach means you don't need to manually specify binary file extensions. The tool will automatically exclude:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Executables and libraries (e.g., .exe, .dll, .so)"}),"\n",(0,s.jsx)(n.li,{children:"Object files and compiled code"}),"\n",(0,s.jsx)(n.li,{children:"Images and media files"}),"\n",(0,s.jsx)(n.li,{children:"Archives and compressed files"}),"\n",(0,s.jsx)(n.li,{children:"Database files"}),"\n",(0,s.jsx)(n.li,{children:"And any other non-text content"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"custom-filtering",children:"Custom Filtering"}),"\n",(0,s.jsx)(n.h3,{id:"pattern-matching-options",children:"Pattern Matching Options"}),"\n",(0,s.jsx)(n.p,{children:"promptext supports several pattern matching options in both configuration files and command-line arguments:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Directory Patterns"}),": Patterns ending with ",(0,s.jsx)(n.code,{children:"/"})," match directories and their contents. These patterns are matched in two ways:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"excludes:\n  - test/ # Matches both 'test/' and 'path/to/test/'\n  - internal/tmp/ # Matches 'internal/tmp/' and 'path/internal/tmp/'\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Wildcard Patterns"}),": Using ",(0,s.jsx)(n.code,{children:"*"})," for flexible matching. The wildcard is matched against the base filename:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'excludes:\n  - "*.generated.go" # Excludes files ending with .generated.go\n  - ".aider*" # Excludes files starting with .aider\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Exact Matches"}),": For specific files or paths. These can be matched in three ways:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'excludes:\n  - "config.json" # Matches \'config.json\' in any directory\n  - "src/constants.go" # Matches exact path\n  - "internal/" # Matches directory and all contents\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"via-configuration-file",children:"Via Configuration File"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".promptext.yml"})," file in your project root:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'excludes:\n  - test/\n  - "*.generated.go"\n  - "internal/tmp/"\n  - "docs/private/"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"via-command-line",children:"Via Command Line"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"-x"})," or ",(0,s.jsx)(n.code,{children:"-exclude"})," flag with comma-separated patterns:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'promptext -x "test/,*.generated.go,internal/tmp/"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"gitignore-integration",children:"GitIgnore Integration"}),"\n",(0,s.jsxs)(n.p,{children:["promptext automatically respects your project's ",(0,s.jsx)(n.code,{children:".gitignore"})," patterns. This means any files or directories listed in your ",(0,s.jsx)(n.code,{children:".gitignore"})," file will also be excluded from processing. This feature can be disabled with:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"promptext -gitignore=false\n"})}),"\n",(0,s.jsx)(n.p,{children:"The tool merges patterns from multiple sources in this order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Default exclude patterns"}),"\n",(0,s.jsx)(n.li,{children:"GitIgnore patterns (if enabled)"}),"\n",(0,s.jsx)(n.li,{children:"Custom exclude patterns from config file or command line"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"All patterns are deduplicated to ensure efficient processing."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var l=i(6540);const s={},r=l.createContext(s);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);